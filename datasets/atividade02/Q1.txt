PT	AU	BA	BE	GP	AF	BF	CA	TI	SO	SE	BS	LA	DT	CT	CY	CL	SP	HO	DE	ID	AB	C1	C3	RP	EM	RI	OI	FU	FP	FX	CR	NR	TC	Z9	U1	U2	PU	PI	PA	SN	EI	BN	J9	JI	PD	PY	VL	IS	PN	SU	SI	MA	BP	EP	AR	DI	DL	D2	EA	PG	WC	WE	SC	GA	PM	OA	HC	HP	DA	UT
C	Yu, A; Sathanur, AV; Jandhyala, V			IEEE	Yu, Albert; Sathanur, Arun V.; Jandhyala, Vikram			A Partial Homomorphic Encryption Scheme for Secure Design Automation on Public Clouds	2012 IEEE 21ST CONFERENCE ON ELECTRICAL PERFORMANCE OF ELECTRONIC PACKAGING AND SYSTEMS	IEEE Conference on Electrical Performance of Electronic Packaging and Systems-EPEPS			Proceedings Paper	IEEE 21st Conference on Electrical Performance of Electronic Packaging and Systems (EPEPS)	OCT 21-24, 2012	Tempe, AZ			Cloud computing; Electronic Design Automation; Field solver; Electromagnetic simulation; Method of Moments; Multi Dimensional Scaling; Matrix completion; Singular Values; Homomorphic encryption; Green's function		The massive compute power offered by public clouds such as Amazon Web Services EC2 provides for a new paradigm in cost-effective and highly scalable parallel deployment of Electronic Design Automation (EDA) tools. Even though the advantages are myriad, customers perceive an inherent security risk in exposing their IP to the cloud. In this work, we start by outlining the shortcomings of established encryption techniques for use in public machines. Using the example of electromagnetic simulation, we show how the IP (layout and technology) may be reverse-engineered from the Green's function matrix by utilizing the Multi Dimensional Scaling approach. We then propose encryption schemes to defeat such sophisticated hacking attempts using principles of homomorphic encryption, while enabling scalability and computational benefits of public clouds	[Yu, Albert; Sathanur, Arun V.; Jandhyala, Vikram] Univ Washington, Dept Elect Engn, Appl Computat Engn Lab, Seattle, WA 98195 USA	University of Washington; University of Washington Seattle	Yu, A (corresponding author), Univ Washington, Dept Elect Engn, Appl Computat Engn Lab, Seattle, WA 98195 USA.	aryu@uw.edu; arunsv@uw.edu; vj@uw.edu						Cai JF, 2010, SIAM J OPTIMIZ, V20, P1956, DOI 10.1137/080738970; Candès EJ, 2009, FOUND COMPUT MATH, V9, P717, DOI 10.1007/s10208-009-9045-5; Chew W.C., 1999, FIELDS WAVES INHOMOG; Gentry C, 2010, COMMUN ACM, V53, P97, DOI 10.1145/1666420.1666444; Gope D, 2005, IEEE T ANTENN PROPAG, V53, P3324, DOI 10.1109/TAP.2005.856350; Gope D., 2011, 20 C EL PERF EL PACK; Keshavan RH, 2010, IEEE T INFORM THEORY, V56, P2980, DOI 10.1109/TIT.2010.2046205; Kruskal J. B., 1978, SAGE PUBLICATIONS, V07-011; Liu J., 2010, ECE TECHNICAL REPORT; Platt JC., 2005, P 10 INT WORKSH ART, P261; RAO SM, 1982, IEEE T ANTENN PROPAG, V30, P409, DOI 10.1109/TAP.1982.1142818; Yu A, 2012, IEEE ANTENNAS PROP	12	2	2			IEEE	NEW YORK	345 E 47TH ST, NEW YORK, NY 10017 USA							2012							177	180															2024-10-24	WOS:000323212000040
J	Valdez, MG; Guervós, JJM				Garcia Valdez, Mario; Merelo Guervos, Juan J.			A container-based cloud-native architecture for the reproducible execution of multi-population optimization algorithms	FUTURE GENERATION COMPUTER SYSTEMS-THE INTERNATIONAL JOURNAL OF ESCIENCE				Article						Multi-population; Nature-inspired algorithm; Parallel genetic algorithms; Cloud-computing; Event-driven architecture	BEE COLONY ALGORITHM; EVOLUTIONARY ALGORITHMS; GENETIC ALGORITHMS	Splitting a population into multiple instances is a technique used extensively in recent years to help improve the performance of nature-inspired optimization algorithms. Work on those populations can be done in parallel, and they can interact asynchronously, a fact that can be leveraged to create scalable implementations based on, among other methods, distributed, multi-threaded, parallel, and cloud-native computing. However, the design of these cloud-native, distributed, multi-population algorithms is not a trivial task. Using as a foundation monolithic (single-instance) solutions, adaptations at several levels, from the algorithmic to the functional, must be made to leverage the scalability, elasticity, (limited) fault-tolerance, reproducibility, and cost-effectiveness of cloud systems while, at the same time, conserving the intended functionality. Instead of an evolutive approach, in this paper, we propose a cloud-native optimization framework created from scratch, that can include multiple (population-based) algorithms without increasing the number of parameters that need tuning. This solution goes beyond the current state of the art, since it can support different algorithms at the same time, work asynchronously, and also be readily deployable to any cloud platform. We evaluate this solution's performance and scalability, together with the effect other design parameters had on it, particularly the number and the size of populations with respect to problem size. The implemented platform is an excellent alternative for running locally or in the cloud, thus proving that cloud-native bioinspired algorithms perform better in their "natural" environment than other algorithms, and set a new baseline for scaling and performance of this kind of algorithms in the cloud. (C) 2020 Elsevier B.V. All rights reserved.	[Garcia Valdez, Mario] Inst Tecnol Tijuana, Dept Grad Studies, Tijuana Bc, Mexico; [Merelo Guervos, Juan J.] Univ Granada, Dept Comp Architecture & Technol, Granada, Spain	University of Granada	Valdez, MG (corresponding author), Inst Tecnol Tijuana, Dept Grad Studies, Tijuana Bc, Mexico.	mario@tectijuana.edu.mx; jmerelo@geneura.ugr.es						Alba E, 2002, INFORM PROCESS LETT, V82, P7, DOI 10.1016/S0020-0190(01)00281-2; [Anonymous], 2010, PARTICLE SWARM OPTIM; [Anonymous], 2016, ARXIV160308785; Araujo L., ARXIV08062843; Back T, 1996, EVOLUTIONARY ALGORIT; Baldini I, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P287, DOI [10.1145/2897073.2897713, 10.1109/MobileSoft.2016.063]; Baugh JW, 2003, LECT NOTES COMPUT SC, V2723, P730; Biswas S, 2014, APPL MATH COMPUT, V232, P216, DOI 10.1016/j.amc.2013.12.023; Cole N, 2010, STUD COMPUT INTELL, V269, P63; Coleman V., 1989, TECH REP; Cotta C, 2012, EVOLUTIONARY COMPUTI, P1, DOI [10.1109/CEC.2012.62556622, DOI 10.1109/CEC.2012.62556622]; De Lucia A., 2017, THESIS; Dorigo M., 1999, Proceedings of the 1999 Congress on Evolutionary Computation-CEC99 (Cat. No. 99TH8406), P1470, DOI 10.1109/CEC.1999.782657; Dziurzanski P, 2020, J COMPUT SCI-NETH, V40, DOI 10.1016/j.jocs.2019.101069; Eiben A.., 2003, NAT COMP SER, Vvol. 45, DOI [10.1007/978-3-662-44874-8, 10.1007/978-3-662-05094-1]; El-Abd M., 2009, P 2009 GEN EV COMP C, P2269, DOI 10.1145/1570256.1570316; Faris H, 2016, PROCEEDINGS OF THE 8TH INTERNATIONAL JOINT CONFERENCE ON COMPUTATIONAL INTELLIGENCE, VOL 1: ECTA, P171, DOI 10.5220/0006048201710177; Fazenda Pedro, 2012, Applications of Evolutionary Computation. Proceedings of EvoApplications 2012: EvoCOMNET, EvoCOMPLEX, EvoFIN, EvoGAMES, EvoHOT, EvoIASP, EvoNUM, EvoPAR, EvoRISK, EvoSTIM, and EvoSTOC, P416, DOI 10.1007/978-3-642-29178-4_42; Fortin FA, 2012, J MACH LEARN RES, V13, P2171; Gamma Erich, 1994, Design Patterns: Elements of Reusable Object-Oriented Software; García-Valdez M, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE COMPANION (GECCO'17 COMPANION), P1750, DOI 10.1145/3067695.3086573; García-Valdez M, 2015, J GRID COMPUT, V13, P329, DOI 10.1007/s10723-014-9319-2; García-Valdez M, 2014, LECT NOTES COMPUT SC, V8672, P702; Georges-Schleuter M.:., 1990, Schwefel and Maenner, P150; Godio A, 2016, J APPL GEOPHYS, V131, P133, DOI 10.1016/j.jappgeo.2016.05.015; Grosso P, 1985, THESIS; Holland J.H., 1992, Adaptation in Natural and Artificial Systems: An Intro-ductory Analysis With Applicationsto Biology, Control, and ArtificialIntelligence; Merelo-Guervós JJ, 2008, IEEE C EVOL COMPUTAT, P1372, DOI 10.1109/CEC.2008.4630973; Karaboga D., 2004, Turkish Journal Electrical Engineering and Computer Sciences, Elektrik, V12, P53; Kennedy J., 2006, Swarm Intelligence, DOI [DOI 10.1007/0-387-27705-66, 10.1007/0-387-27705-6_6, DOI 10.1007/0-387-27705-6_6]; Khalloof H., 2018, P GENETIC EVOLUTIONA, P1363, DOI [10.1145/3205651.3208253, DOI 10.1145/3205651.3208253]; Kratzke N, 2017, J SYST SOFTWARE, V126, P1, DOI 10.1016/j.jss.2017.01.001; Lai XS, 2019, NEURAL COMPUT APPL, V31, P6449, DOI 10.1007/s00521-018-3454-9; Laredo JLJ, 2008, SOFT COMPUT, V12, P1145, DOI 10.1007/s00500-008-0297-9; Li CH, 2015, INFORM SCIENCES, V296, P95, DOI 10.1016/j.ins.2014.10.062; Li JM, 2007, INT J INNOV COMPUT I, V3, P1707; Li XT, 2016, IEEE ACCESS, V4, DOI 10.1109/ACCESS.2016.2617738; González DL, 2009, EUROMICRO WORKSHOP P, P419, DOI [10.1109/PDP.2009.25, 10.1109/.24]; Malawski M, 2020, FUTURE GENER COMP SY, V110, P502, DOI 10.1016/j.future.2017.10.029; Valenzuela RM, 2015, STUD COMPUT INTELL, V601, P347, DOI 10.1007/978-3-319-17747-2_27; Guervós JJM, 2018, LECT NOTES COMPUT SC, V11101, P399, DOI 10.1007/978-3-319-99253-2_32; Merelo J.-J., ARXIV160101607; Merelo JJ, 2019, COMM COM INF SC, V1052, P16, DOI 10.1007/978-3-030-31019-6_2; Merelo JJ, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION COMPANION (GECCO'12), P109; Mirjalili S, 2014, ADV ENG SOFTW, V69, P46, DOI 10.1016/j.advengsoft.2013.12.007; MUHLENBEIN H, 1988, PARALLEL COMPUT, V7, P65, DOI 10.1016/0167-8191(88)90098-1; Munawar A, 2010, FUTURE GENER COMP SY, V26, P633, DOI 10.1016/j.future.2009.12.001; Nicolau M., 2009, P 11 ANN C COMP GEN, P2473; Nseef SK, 2016, KNOWL-BASED SYST, V104, P14, DOI 10.1016/j.knosys.2016.04.005; Salza P., ARXIV160606961; Salza P, 2019, FUTURE GENER COMP SY, V92, P276, DOI 10.1016/j.future.2018.09.066; Salza P, 2016, PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'16 COMPANION), P121, DOI 10.1145/2908961.2909024; Serrano R, 2008, STUD COMPUT INTELL, V154, P307, DOI 10.1007/978-3-540-70812-4_17; Sherry Dylan, 2012, Applications of Evolutionary Computation. Proceedings of EvoApplications 2012: EvoCOMNET, EvoCOMPLEX, EvoFIN, EvoGAMES, EvoHOT, EvoIASP, EvoNUM, EvoPAR, EvoRISK, EvoSTIM, and EvoSTOC, P477, DOI 10.1007/978-3-642-29178-4_48; Tan Y, 2016, IEEE T CYBERNETICS, V46, P2028, DOI 10.1109/TCYB.2015.2460261; Tanabe R, 2013, 2013 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P1263; Thönes J, 2015, IEEE SOFTWARE, V32, P116, DOI 10.1109/MS.2015.11; Varghese B, 2018, FUTURE GENER COMP SY, V79, P849, DOI 10.1016/j.future.2017.09.020; Wu GH, 2016, INFORM SCIENCES, V329, P329, DOI 10.1016/j.ins.2015.09.009; Yang XS, 2014, NATURE-INSPIRED OPTIMIZATION ALGORITHMS, P1; Zhao S, 2019, PROCEEDINGS OF THE 2019 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'19), P1381, DOI 10.1145/3321707.3321826	62	10	10			ELSEVIER	AMSTERDAM	RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS						MAR	2021	116						234	252		10.1016/j.future.2020.10.039	http://dx.doi.org/10.1016/j.future.2020.10.039												2024-10-24	WOS:000599846600019
C	Ferguson, J		Yuan, CM; Kim, RH		Ferguson, John			New approaches to physical verification closure and cloud computing come to the rescue in the EUV era	DESIGN-PROCESS-TECHNOLOGY CO-OPTIMIZATION FOR MANUFACTURABILITY XIV	Proceedings of SPIE			Proceedings Paper	Conference on Design-Process-Technology Co-Optimization for Manufacturability XIV	FEB 26-27, 2020	San Jose, CA			IC verification		As the semiconductor industry strives to keep Moore's Law moving forward, companies are continually confronted with new and mounting challenges. The use of fin field-effect transistors (finFETs) and the recent introduction of gate-all-around (GAA) finFETs present questions of performance, scalability, and variation resilience that have yet to be fully resolved. The need for multi-patterning, which has been in place since the 22 nm node, is not going away, even with the introduction of extreme ultraviolet (EUV) lithography. Complex fill requirements have emerged as a critical success factor in both manufacturability and performance in leading-edge nodes. These factors, among others, have created significant impacts across the electronic design automation (EDA) design-to-tapeout ecosystem, particularly in physical verification. In response, EDA suppliers constantly evaluate and experiment with the design information they receive from both design houses and foundries, and often establish collaborative projects, to assess the impact of changing technology, and to develop and implement new functionality and new tools that reduce or eliminate time and resource impacts while ensuring accuracy and full coverage. Replacing inefficient, less precise verification processes with smarter, more accurate, faster, and more efficient functionality helps maintain, and even grow, both the bottom line and product quality in the face of increasing technological complexity.	[Ferguson, John] Siemens Business, 8005 SW Boeckman Rd, Wilsonville, OR 97007 USA	Siemens AG	Ferguson, J (corresponding author), Siemens Business, 8005 SW Boeckman Rd, Wilsonville, OR 97007 USA.							Abercrombie D, 2019, MENTOR SIEMENS B MAR MENTOR SIEMENS B MAR; El-Sewefy O., 2019, CALIBRE CLOUD UNLOCK; Hossam N., 2019, MENTOR SIEMENS B JUL MENTOR SIEMENS B JUL	3	0	0			SPIE-INT SOC OPTICAL ENGINEERING	BELLINGHAM	1000 20TH ST, PO BOX 10, BELLINGHAM, WA 98227-0010 USA							2021	11328								113280W	10.1117/12.2551262	http://dx.doi.org/10.1117/12.2551262												2024-10-24	WOS:000671888300022
J	Veiga, J; Expósito, RR; Taboada, GL; Touriño, J				Veiga, Jorge; Exposito, Roberto R.; Taboada, Guillermo L.; Tourino, Juan			Flame-MR: An event-driven architecture for MapReduce applications	FUTURE GENERATION COMPUTER SYSTEMS-THE INTERNATIONAL JOURNAL OF ESCIENCE				Article						Big Data; MapReduce; Hadoop; Event-driven architecture; Cloud computing	PERFORMANCE; MEMORY	Nowadays, many organizations analyze their data with the MapReduce paradigm, most of them using the popular Apache Hadoop framework. As the data size managed by MapReduce applications is steadily increasing, the need for improving the Hadoop performance also grows. Existing modifications of Hadoop (e.g., Mellanox Unstructured Data Accelerator) attempt to improve performance by changing some of its underlying subsystems. However, they are not always capable to cope with all its performance bottlenecks or they hinder its portability. Furthermore, new frameworks like Apache Spark or DataMPI can achieve good performance improvements, but they do not keep compatibility with existing MapReduce applications. This paper proposes Flame-MR, a new event-driven MapReduce architecture that increases Hadoop performance by avoiding memory copies and pipelining data movements, without modifying the source code of the applications. The performance evaluation on two representative systems (an HPC cluster and a public cloud platform) has shown experimental evidence of significant performance increases, reducing the execution time by up to 54% on the Amazon EC2 cloud. (C) 2016 Elsevier B.V. All rights reserved.	[Veiga, Jorge; Exposito, Roberto R.; Taboada, Guillermo L.; Tourino, Juan] Univ A Coruna, Fac Informat, Dept Elect & Sistemas, GAC, Campus A Coruna, La Coruna 15071, Spain	Universidade da Coruna	Veiga, J (corresponding author), Univ A Coruna, Fac Informat, Dept Elect & Sistemas, GAC, Campus A Coruna, La Coruna 15071, Spain.	jorge.veiga@udc.es; rreye@udc.es; taboada@udc.es; juan@udc.es						Charles P, 2005, ACM SIGPLAN NOTICES, V40, P519, DOI 10.1145/1103845.1094852; Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137; Dong Yang, 2013, 2013 IEEE International Conference on Big Data, P94, DOI 10.1109/BigData.2013.6691703; Expósito RR, 2013, FUTURE GENER COMP SY, V29, P218, DOI 10.1016/j.future.2012.06.009; Fadika Z, 2014, FUTURE GENER COMP SY, V36, P379, DOI 10.1016/j.future.2013.12.007; Gropp W, 1996, PARALLEL COMPUT, V22, P789, DOI 10.1016/0167-8191(96)00024-5; Gunarathne T., 2010, Proceedings of the 2010 IEEE 2nd International Conference on Cloud Computing Technology and Science (CloudCom 2010), P565, DOI 10.1109/CloudCom.2010.107; Jeon S, 2016, FUTURE GENER COMP SY, V65, P182, DOI 10.1016/j.future.2015.11.022; Kang U, 2009, IEEE DATA MINING, P229, DOI 10.1109/ICDM.2009.14; Lu XY, 2014, INT PARALL DISTRIB P, DOI 10.1109/IPDPS.2014.90; Ni Y, 2012, PROCEEDINGS OF THE 2012 INTERNATIONAL CONFERENCE ON MANAGEMENT INNOVATION AND PUBLIC POLICY (ICMIPP 2012), VOLS 1-6, P1879; Shinnar A, 2012, PROC VLDB ENDOW, V5, P1736, DOI 10.14778/2367502.2367513; Shvachko K., 2010, 2010 IEEE 26th Symposium on Mass Storage Systems and Technologies (MSST), P1, DOI DOI 10.1109/MSST.2010.5496972; Veiga J, 2016, COMPUT ELECTR ENG, V50, P200, DOI 10.1016/j.compeleceng.2015.11.021; Veiga J, 2015, PROCEDIA COMPUT SCI, V51, P80, DOI 10.1016/j.procs.2015.05.202; Wang L, 2014, INT S HIGH PERF COMP, P488, DOI 10.1109/HPCA.2014.6835958; Wang Y, 2011, INT CONF ACOUST SPEE, P1, DOI 10.1109/PLASMA.2011.5993071; Wasi-ur-Rahman Md, 2013, 2013 IEEE International Symposium on Parallel and Distributed Processing, Workshops and PhD Forum (IPDPSW), P1908, DOI 10.1109/IPDPSW.2013.238; Welsh M., 2001, Operating Systems Review, V35, P230, DOI 10.1145/502059.502057; Yan D, 2015, J COMPUT SCI TECH-CH, V30, P30, DOI 10.1007/s11390-015-1502-9; Zaharia M., 2010, Proceedings of the 2nd USENIX conference on Hot topics in cloud computing, P10, DOI DOI 10.HTTP://DL.ACM.0RG/CITATI0N.CFM?; Zhang F, 2015, FUTURE GENER COMP SY, V43-44, P149, DOI 10.1016/j.future.2014.06.009	22	13	13			ELSEVIER	AMSTERDAM	RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS						DEC	2016	65						46	56		10.1016/j.future.2016.06.006	http://dx.doi.org/10.1016/j.future.2016.06.006												2024-10-24	WOS:000383826700004
C	Hamza, M; Akbar, MA; Smolander, K		Jedlitschka, A; Janes, A; Lenarduzzi, V; Kadgien, R; Li, X		Hamza, Muhammad; Akbar, Muhammad Azeem; Smolander, Kari			The Journey to Serverless Migration: An Empirical Analysis of Intentions, Strategies, and Challenges	PRODUCT-FOCUSED SOFTWARE PROCESS IMPROVEMENT, PROFES 2023, PT I	Lecture Notes in Computer Science			Proceedings Paper	24th International Conference on Product-Focused Software Process Improvement (PROFES)	DEC 10-13, 2023	Dornbirn, AUSTRIA			Legacy application; Serverless Computing; Migration; Empirical Study		Serverless is an emerging cloud computing paradigm that facilitates developers to focus solely on the application logic rather than provisioning and managing the underlying infrastructure. The inherent characteristics such as scalability, flexibility, and cost efficiency of serverless computing, attracted many companies to migrate their legacy applications toward this paradigm. However, the stateless nature of serverless requires careful migration planning, consideration of its subsequent implications, and potential challenges. To this end, this study investigates the intentions, strategies, and technical and organizational challenges while migrating to a serverless architecture. We investigated the migration processes of 11 systems across diverse domains by conducting 15 in-depth interviews with professionals from 11 organizations. We also presented a detailed discussion of each migration case. Our findings reveal that large enterprises primarily migrate to enhance scalability and operational efficiency, while smaller organizations intend to reduce the cost. Furthermore, organizations use a domain-driven design approach to identify the use case and gradually migrate to serverless using a strangler pattern. However, migration encounters technical challenges i.e., testing event-driven architecture, integrating with the legacy system, lack of standardization, and organizational challenges i.e., mindset change and hiring skilled serverless developers as a prominent. The findings of this study provide a comprehensive understanding that can guide future implementations and advancements in the context of serverless migration.	[Hamza, Muhammad; Akbar, Muhammad Azeem; Smolander, Kari] LUT Univ, Dept Software Engn, Lappeenranta, Finland	Lappeenranta-Lahti University of Technology LUT	Hamza, M (corresponding author), LUT Univ, Dept Software Engn, Lappeenranta, Finland.	Muhammad.hamza@lut.fi; Azeem.akbar@lut.fi; Kari.smolander@lut.fi						[Anonymous], 2023, Zenodo, DOI DOI 10.5281/ZENODO.8233478; BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684; Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI DOI 10.1191/1478088706QP063OA; Costello Katie, The CIO's guide to serverless computing; Datadog, 2022, The state of serverless; Eismann S, 2022, IEEE T SOFTWARE ENG, V48, P4152, DOI 10.1109/TSE.2021.3113940; Eskandani N, 2023, J SYST SOFTWARE, V198, DOI 10.1016/j.jss.2022.111589; Hamza M, 2023, 27TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, EASE 2023, P304, DOI 10.1145/3593434.3593471; Jonas E., 2019, arXiv, DOI DOI 10.48550/ARXIV.1902.03383; Leitner P, 2019, J SYST SOFTWARE, V149, P340, DOI 10.1016/j.jss.2018.12.013; Lenarduzzi V, 2021, IEEE SOFTWARE, V38, P54, DOI 10.1109/MS.2020.3030803; Lin CY, 2021, IEEE T PARALL DISTR, V32, P615, DOI 10.1109/TPDS.2020.3028841; Rinta-Jaskari E, 2022, 2022 IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS WORKSHOPS AND OTHER AFFILIATED EVENTS (PERCOM WORKSHOPS), DOI 10.1109/PerComWorkshops53856.2022.9767473; Robinson OC, 2014, QUAL RES PSYCHOL, V11, P25, DOI 10.1080/14780887.2013.801543; Taibi D, 2022, IEEE INT SYMP SERV O, P85, DOI 10.1109/SOSE55356.2022.00016; Taibi D, 2021, IEEE SOFTWARE, V38, P25, DOI 10.1109/MS.2020.3028708; Taibi D, 2020, PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE (CLOSER), P181, DOI 10.5220/0009578501810192; Wen JF, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3579643; Wen JF, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P416, DOI 10.1145/3468264.3468558; Yussupov V., 2019, P 12 IEEE ACM INT C, P229, DOI [10.1145/3344341, DOI 10.1145/3344341]; Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.62, 10.1109/APSEC.2016.031]	21	1	1			SPRINGER INTERNATIONAL PUBLISHING AG	CHAM	GEWERBESTRASSE 11, CHAM, CH-6330, SWITZERLAND							2024	14483						100	115		10.1007/978-3-031-49266-2_7	http://dx.doi.org/10.1007/978-3-031-49266-2_7												2024-10-24	WOS:001157572800007
J	Sfaxi, L; Ben Aissa, MM				Sfaxi, Lilia; Ben Aissa, Mohamed Mehdi			Babel: A Generic Benchmarking Platform for Big Data Architectures	BIG DATA RESEARCH				Article						Benchmark; Big Data architectures; Performance analysis; Event-driven systems; Cloud computing; Distributed systems	SYSTEMS	In this era of big and fast data, software architects tend to find it really hard to make consistent decisions about which architecture and technologies are ideal for a certain business need. It is even harder to make them while dealing with the scarcity of clear methodologies, best practices and reference architectures. In this prospect, architecture evaluation through benchmarking can be of great interest, as it enables the detection of performance anomalies or bottlenecks as you go. The problem when talking about Big Data benchmarking, is that existing solutions remain technology-related, and do not deal with the heterogeneous aspect of complex architectures. In addition to that, businesses are in general dealing with multi-layered complex systems, involving various technologies, paradigms and micro-architectures. This means that the benchmarking solution must be able to give fine-grained insights about each of the layers. A successful benchmarking system must also be seamless, easy to use, scalable, and preferably cloud native. To satisfy these requirements, we designed and implemented Babel, a generic Big Data benchmarking platform, that insures an end-to-end performance evaluation and monitoring. We present in this paper the principles, architecture, integration and deployment steps of Babel. (C) 2021 Elsevier Inc. All rights reserved.	[Sfaxi, Lilia; Ben Aissa, Mohamed Mehdi] Univ Carthage, INSAT, Tunis, Tunisia; [Ben Aissa, Mohamed Mehdi] Univ Carthage, Tunisia Polytech Sch, Tunis, Tunisia	Universite de Carthage; Universite de Carthage	Sfaxi, L (corresponding author), Univ Carthage, INSAT, Tunis, Tunisia.	lilia.sfaxi@insat.u-carthage.tn						Anand G., 2008, BENCHMARKING INT J; [Anonymous], 2013, P 2013 ACM SIGMOD IN, DOI DOI 10.1145/2463676.2465296; [Anonymous], 2013, P 2013 ACM SIGMOD IN; [Anonymous], 2015, STATE ART FUTURE DIR; Azarmi B., 2016, SCALABLE BIG DATA AR; B. for, 2013, INT SETTLEMENTS FUND; Baru C., 2014, 5 INT WORKSH WBDB PO; Braun H. T., 2015, Evaluation of big data maturity models-a benchmarking study to support big data maturity assessment in organizations; Capotua M., 2015, GRADES 15; Chen HC, 2012, MIS QUART, V36, P1165; Chintapalli S, 2016, IEEE SYM PARA DISTR, P1789, DOI 10.1109/IPDPSW.2016.138; Cooper B.F., 2010, SOCC, DOI DOI 10.1145/1807128.1807152; E.C. Bank, 2018, TECHNICAL REPORT; Ferrarons J, 2014, LECT NOTES COMPUT SC, V8391, P109, DOI 10.1007/978-3-319-04936-6_8; Gu L, 2015, PROC INT CONF DATA, P101, DOI 10.1109/ICDE.2015.7113276; Han R, 2018, IEEE T SERV COMPUT, V11, P580, DOI 10.1109/TSC.2017.2730882; Huang SS, 2010, I C DATA ENGIN WORKS, P41, DOI 10.1109/ICDEW.2010.5452747; Ivanov Todor, 2016, Performance Evaluation and Benchmarking: Traditional to Big Data to Internet of Things. 7th TPC Technology Conference, TPCTC 2015. Revised Selected Papers: LNCS 9508, P135, DOI 10.1007/978-3-319-31409-9_9; Kim K, 2008, PROCEEDINGS OF THE 2008 14TH IEEE INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED SYSTEMS, P11, DOI 10.1109/ICPADS.2008.70; Li MH, 2017, ASIA PAC J MANAG, V34, P19, DOI 10.1007/s10490-015-9436-x; Lu RR, 2014, INT CONF UTIL CLOUD, P69, DOI 10.1109/UCC.2014.15; Luo CJ, 2012, FRONT COMPUT SCI-CHI, V6, P347, DOI 10.1007/s11704-012-2118-7; Malik M, 2018, ACM TRANS MODELING P, V3, DOI 10.1145/3229049; Marz N., 2013, ARXIV10111669V3, V53; Mohapatra D., 2013, TECHNICAL REPORT; Nambiar Raghunath, 2014, 2014 IEEE International Conference on Big Data (Big Data), P18, DOI 10.1109/BigData.2014.7004472; Ngomo AN, 2016, ERCIM NEWS, P46; Ouaknine K, 2015, IEEE INT CONGR BIG, P643, DOI 10.1109/BigDataCongress.2015.99; Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302; Persico V, 2018, FUTURE GENER COMP SY, V89, P98, DOI 10.1016/j.future.2018.05.068; Poggi N, 2014, IEEE INT CONF BIG DA, P905, DOI 10.1109/BigData.2014.7004322; Sangroya A, 2013, LECT NOTES COMPUT SC, V7640, P3, DOI 10.1007/978-3-642-36949-0_2; Wang L, 2014, INT S HIGH PERF COMP, P488, DOI 10.1109/HPCA.2014.6835958; Xia Y., 2015, INT C HIGH PERFORMAN, P1; Yao BB, 2004, PROC INT CONF DATA, P621, DOI 10.1109/ICDE.2004.1320032	35	3	3			ELSEVIER	AMSTERDAM	RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS						MAY 15	2021	24								100186	10.1016/j.bdr.2021.100186	http://dx.doi.org/10.1016/j.bdr.2021.100186		JAN 2021										2024-10-24	WOS:000642459200005
C	Merrill, M; Reus, W; Neumann, T		Robbins, B; Chamberlain, B		Merrill, Michael; Reus, William; Neumann, Timothy			Arkouda: Interactive Data Exploration Backed by Chapel	CHIUW'19: PROCEEDINGS OF THE ACM SIGPLAN 6TH CHAPEL IMPLEMENTERS AND USERS WORKSHOP				Proceedings Paper	6th Annual ACM SIGPLAN Chapel Implementers and Users Workshop (CHIUW)	JUN 22, 2019	Phoenix, AZ			Exploratory data analysis (EDA); Chapel; Jupyter; Python; NumPy		Exploratory data analysis (EDA) is the prerequisite for all data science. EDA is non-negotiably interactive-by far the most popular environment for EDA is a Jupyter notebook- and, as datasets grow, increasingly computationally intensive. Several existing projects attempt to combine interactivity and distributed computation using programming paradigms and tools from cloud computing, but none of these projects have come close to meeting our needs for high-performance EDA. To fill this gap, we have developed a prototype, called arkouda, that allows a user to interactively issue massively parallel computations on distributed data.	[Merrill, Michael; Reus, William; Neumann, Timothy] US Dept Def, Washington, DC 20305 USA	United States Department of Defense	Merrill, M (corresponding author), US Dept Def, Washington, DC 20305 USA.	mhmerrill@mac.com; reus@post.harvard.edu; timothyneumann1@gmail.com							0	15	16			ASSOC COMPUTING MACHINERY	NEW YORK	1515 BROADWAY, NEW YORK, NY 10036-9998 USA							2019							28	28		10.1145/3329722.3330148	http://dx.doi.org/10.1145/3329722.3330148												2024-10-24	WOS:000519103300007
J	Wu, CG; Li, W; Wang, L; Zomaya, AY				Wu, Chu-ge; Li, Wei; Wang, Ling; Zomaya, Albert Y.			Hybrid Evolutionary Scheduling for Energy-Efficient Fog-Enhanced Internet of Things	IEEE TRANSACTIONS ON CLOUD COMPUTING				Article						Edge computing; Internet of Things; evolutionary computation; scheduling; energy efficiency; makespan	TASK GRAPHS; CLOUD; ALGORITHM	In recent years, the rapid development of the Internet of Things (IoT) has produced a large amount of data that needs to be processed in a timely manner. Traditional cloud computing systems can provide us with plentiful resources to process such data. However, the increasing requirements of IoT applications on data privacy, energy consumption savings and location-aware data processing pushes the emergence and the interplay of fog computing and cloud computing. This paper examines the resource scheduling issue under such a system to minimize makespan and energy consumption. A multi-objective estimation of distribution algorithm (EDA) as well as a partition operator is adopted to divide the graph and determine the task processing permutation and processor assignment. Single and multiple application simulation were both conducted. The comparative results show that the Pareto set produced by our proposed algorithm is able to dominate a large proportion of those solutions by the heuristic method and the simple EDA under single application simulation. When it comes to multi-application simulation, IoT devices can have a much longer lifetime with our proposed scheduling algorithm as well having similar performance to the other algorithms on fog node energy consumption and much better on makespan.	[Wu, Chu-ge; Wang, Ling] Tsinghua Univ, Dept Automat, Beijing 100084, Peoples R China; [Li, Wei; Zomaya, Albert Y.] Univ Sydney, Sch Comp Sci, Ctr Distributed & High Performance Comp, Sydney, NSW 2006, Australia	Tsinghua University; University of Sydney	Wang, L (corresponding author), Tsinghua Univ, Dept Automat, Beijing 100084, Peoples R China.	wucg15@mails.tsinghua.edu.cn; liwei@it.usyd.edu.au; wangling@mail.tsinghua.edu.cn; albert.zomaya@sydney.edu.au						Aral A, 2016, J SYST SOFTWARE, V120, P89, DOI 10.1016/j.jss.2016.07.007; Baluja S., 1994, CMUCS94163 DEP COMP; Bonomi F., 2012, MCC WORKSH MOB CLOUD, DOI [DOI 10.1145/2342509.2342513, 10.1145/2342509.2342513]; Borylo P, 2016, IEEE ICC, DOI 10.1109/ICC.2016.7511451; de Farias C, 2016, ACM COMPUT SURV, V48, DOI 10.1145/2851510; Deng RL, 2016, IEEE INTERNET THINGS, V3, P1171, DOI 10.1109/JIOT.2016.2565516; Dick RP, 1998, HARDW SOFTW CODES, P97, DOI 10.1109/HSC.1998.666245; Dietrich I, 2009, ACM T SENSOR NETWORK, V5, DOI 10.1145/1464420.1464425; Jalali F, 2016, IEEE J SEL AREA COMM, V34, P1728, DOI 10.1109/JSAC.2016.2545559; Kumar K, 2013, MOBILE NETW APPL, V18, P129, DOI 10.1007/s11036-012-0368-0; Kwok YK, 1999, ACM COMPUT SURV, V31, P406, DOI 10.1145/344588.344618; Li BB, 2008, IEEE T SYST MAN CY A, V38, P818, DOI 10.1109/TSMCA.2008.923086; Li W, 2017, FUTURE GENER COMP SY, V70, P104, DOI 10.1016/j.future.2016.06.019; Li W, 2013, ACM T SENSOR NETWORK, V9, DOI 10.1145/2480730.2480736; Montgomery D. C., 1984, DESIGN ANAL EXPT; Nan YC, 2018, J PARALLEL DISTR COM, V112, P53, DOI 10.1016/j.jpdc.2017.09.009; Sanders P, 2011, LECT NOTES COMPUT SC, V6942, P469, DOI 10.1007/978-3-642-23719-5_40; Sinnen Oliver., 2007, TASK SCHEDULING PARA; Skarlat O, 2017, 2017 IEEE 1ST INTERNATIONAL CONFERENCE ON FOG AND EDGE COMPUTING (ICFEC), P89, DOI 10.1109/ICFEC.2017.12; Tobita T, 2002, J SCHED, V5, P379, DOI 10.1002/jos.116; Wang SY, 2016, IEEE T SYST MAN CY-S, V46, P139, DOI 10.1109/TSMC.2015.2416127; Wu CG, 2018, J PARALLEL DISTR COM, V117, P63, DOI 10.1016/j.jpdc.2018.02.009; Wu CG, 2017, IEEE INT CON AUTO SC, P630, DOI 10.1109/COASE.2017.8256173; Zangari M, 2017, INFORM SCIENCES, V397, P137, DOI 10.1016/j.ins.2017.02.034	24	40	41			IEEE-INST ELECTRICAL ELECTRONICS ENGINEERS INC	PISCATAWAY	445 HOES LANE, PISCATAWAY, NJ 08855-4141 USA						APR-JUN	2021	9	2					641	653		10.1109/TCC.2018.2889482	http://dx.doi.org/10.1109/TCC.2018.2889482												2024-10-24	WOS:000658339200018
C	Xu, J; Tang, Y		Deng, W		Xu, Jun; Tang, Yong			Improved Particle Optimization Algorithm Solving Hadoop Task Scheduling Problem	PROCEEDINGS OF THE 2ND INTERNATIONAL CONFERENCE ON INTELLIGENT COMPUTING AND COGNITIVE INFORMATICS				Proceedings Paper	2nd International Conference on Intelligent Computing and Cognitive Informatics (ICICCI)	SEP 08-09, 2015	Singapore, SINGAPORE			Task scheduling; Estimation of Distribution; Particle Swarm Optimization; Cloud computing		Cloud computing to provide service for the user group is huge, so the number of cloud computer's tasks is enormous, the system handle large tasks all the time so that task scheduling is the key and difficult points in the cloud. This article make research on how to make full use of cloud resources for task efficiently scheduling. This paper proposes an Improved Particle Swarm-Estimation of Distribution optimization Algorithm (IPS-EDA) based on task allocation strategy. The task scheduling strategy is optimization strategy based on improved particle swarm algorithm, which introduce estimation of distribution algorithm (EDA) based probabilistic model and random sampling theory, the proposed algorithm does not fall into local optimum. The simulation results show that the performance of IPS-EDA has been greatly improved provides better load balancing and resource utilization.	[Xu, Jun; Tang, Yong] S China Normal Univ, Coll Comp, Guangzhou 510631, Guangdong, Peoples R China; [Xu, Jun] ATM Res Inst, GRG Banking, Guangzhou Radio Grp, Guangzhou 510663, Guangdong, Peoples R China	South China Normal University; Guangzhou Radio Group	Xu, J (corresponding author), S China Normal Univ, Coll Comp, Guangzhou 510631, Guangdong, Peoples R China.	xujun3447@163.com; ytang@scnu.edu.cn						Clerc M, 2002, IEEE T EVOLUT COMPUT, V6, P58, DOI 10.1109/4235.985692; Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137; Eberhart RC, 2000, IEEE C EVOL COMPUTAT, P84, DOI 10.1109/CEC.2000.870279; Hayes B, 2008, COMMUN ACM, V51, P9, DOI [10.1145/1364782.1364786, 10.1145/1364782.1364789]; Kennedy J, 1995, 1995 IEEE INTERNATIONAL CONFERENCE ON NEURAL NETWORKS PROCEEDINGS, VOLS 1-6, P1942, DOI 10.1109/icnn.1995.488968; LING DASMALCHIG, 2008, P 2008 IEEE EL POW E, P1; Shapiro JL, 2005, EVOL COMPUT, V13, P99, DOI 10.1162/1063656053583414; Wang GZ, 2010, PROC VLDB ENDOW, V3, P952, DOI 10.14778/1920841.1920962	8	9	9			ATLANTIS PRESS	PARIS	29 AVENUE LAVMIERE, PARIS, 75019, FRANCE							2015							11	14															2024-10-24	WOS:000364791300003
J	Hosny, A; Reda, S				Hosny, Abdelrahman; Reda, Sherief			Characterizing and Optimizing EDA Flows for the Cloud	IEEE TRANSACTIONS ON COMPUTER-AIDED DESIGN OF INTEGRATED CIRCUITS AND SYSTEMS				Article						Cloud computing; Costs; Virtual machining; Runtime; Hardware; Software as a service; Predictive models; Cloud computing; electronic design automation (EDA); graph neural networks	COST OPTIMIZATION; FRAMEWORK; ALGORITHM	Design space exploration in logic synthesis and parameter tuning in physical design require a massive amount of compute resources in order to meet tapeout schedules. To address this need, cloud computing provides semiconductor and electronics companies with instant access to scalable compute resources. However, deploying electronic design automation (EDA) jobs on the cloud requires EDA teams to deeply understand the characteristics of their jobs in cloud environments. Unfortunately, there has been little to no public information on these characteristics. Thus, in this article, we first formulate the problem of moving EDA jobs to the cloud. To address the problem, we characterize the performance of four EDA main applications, namely: 1) synthesis; 2) placement; 3) routing; and 4) static timing analysis. We show that different EDA jobs require different compute configurations in order to achieve the best performance. Using observations from our characterization, we propose a novel model based on graph convolutional networks to predict the total runtime of a given stage on different configurations. Our model achieves a prediction accuracy of 87%. Furthermore, we present a new formulation for optimizing cloud deployments in order to reduce costs while meeting deadline constraints. We present a pseudopolynomial optimal solution using a multichoice knapsack mapping that reduces deployment costs by 35.29%, with minimal overhead to the total runtime. In addition, we describe a cloud-ready solution, called EDA analytics central, for the continuous optimization of a design across an EDA flow. We used this system in building our runtime prediction model.	[Hosny, Abdelrahman] Brown Univ, Dept Comp Sci, Providence, RI 02912 USA; [Reda, Sherief] Brown Univ, Sch Engn, Providence, RI 02912 USA	Brown University; Brown University	Hosny, A (corresponding author), Brown Univ, Dept Comp Sci, Providence, RI 02912 USA.	abdelrahman_hosny@brown.edu						Amaru L., 2015, P 24 INT WORKSH LOG; [Anonymous], 2014, mongodb; AWS, HIGH PERFORMANCE COM; Azure, AZ HIGH PERF COMP; Balkind J, 2016, ACM SIGPLAN NOTICES, V51, P217, DOI 10.1145/2954679.2872414; Bernstein D, 2014, IEEE CLOUD COMPUT, V1, P81, DOI 10.1109/MCC.2014.51; Chaisiri S, 2012, IEEE T SERV COMPUT, V5, P164, DOI 10.1109/TSC.2011.7; Chen SM, 2016, IEEE SYST J, V10, P1447, DOI 10.1109/JSYST.2015.2462714; Chen XD, 2015, IEEE T EMERG TOP COM, V3, P534, DOI 10.1109/TETC.2015.2443714; Chen ZG, 2015, IEEE C EVOL COMPUTAT, P708, DOI 10.1109/CEC.2015.7256960; Chiang YJ, 2015, IEEE T CLOUD COMPUT, V3, P145, DOI 10.1109/TCC.2014.2350492; DUDZINSKI K, 1987, EUR J OPER RES, V28, P3, DOI 10.1016/0377-2217(87)90165-2; El-Sewefy O., 2019, CALIBRE CLOUD UNLOCK; Fenstermaker S, 2000, DES AUT CON, P705, DOI 10.1145/337292.337745; GCP, HIGH PERFORMANCE COM; Goudarzi H., 2012, Proceedings of the 2012 12th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing (CCGrid 2012), P172, DOI 10.1109/CCGrid.2012.112; Gupta A, 2013, INT CONF CLOUD COMP, P306, DOI 10.1109/CloudCom.2013.47; Hashemi S., 2018, WORKSH OP SOURC EDA, P21; Kahng AB, 2001, INTERNATIONAL SYMPOSIUM ON QUALITY ELECTRONIC DESIGN, PROCEEDINGS, P81, DOI 10.1109/ISQED.2001.915210; Kamath V, 2013, IEEE INT CONF CLOUD, P770, DOI 10.1109/CLOUD.2013.72; Kellerer H., 2004, KNAPSACK PROBLEMS, P317, DOI [10.1007/978-3-540-24777-7_11, DOI 10.1007/978-3-540-24777-7]; Kingma DP, 2014, ADV NEUR IN, V27; Lucas Simarro Jose Luis, 2011, 2011 International Conference on High Performance Computing & Simulation, P1; Man CL, 2014, 2014 INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND INTERNET OF THINGS (CCIOT), P1, DOI 10.1109/CCIOT.2014.7062494; Maraj Arianit, 2013, Proceedings of the 2013 55th International Symposium. ELMAR-2013, P239; Kipf TN, 2017, Arxiv, DOI arXiv:1609.02907; Nanda S., 2019, EURO PAR 2019 PARALL, P639; Opera, About us; Osypanka P, 2022, IEEE T CLOUD COMPUT, V10, P2079, DOI 10.1109/TCC.2020.3015769; Petitet Antoine., 2004, HPL A PORTABLE IMPLE; Peyer S, 2009, J DISCRET ALGORITHMS, V7, P377, DOI 10.1016/j.jda.2007.08.003; Prukkantragorn P., 2016, 2016 INT COMPUTER SC, P1; Qian H., 2011, P UNSENIX HOT ICE, P1; Qinghao Shen, 2019, 2019 IEEE 21st International Conference on High Performance Computing and Communications; IEEE 17th International Conference on Smart City; IEEE 5th International Conference on Data Science and Systems (HPCC/SmartCity/DSS). Proceedings, P313, DOI 10.1109/HPCC/SmartCity/DSS.2019.00056; Rodriguez MA, 2014, IEEE T CLOUD COMPUT, V2, P222, DOI 10.1109/TCC.2014.2314655; Sehgal N, 2016, IETE TECH REV, V33, P345, DOI 10.1080/02564602.2015.1099056; Singh A, 2017, J KING SAUD UNIV-COM, V29, P19, DOI 10.1016/j.jksuci.2015.09.001; Somasundaram TS, 2014, FUTURE GENER COMP SY, V34, P47, DOI 10.1016/j.future.2013.12.024; Weisberg S., 2014, Applied Linear Regression, V4th ed.; Wolski R, 2017, SC'17: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS, DOI 10.1145/3126908.3126953; Xiaopeng Lin, 2010, 2010 International Conference on Anti-Counterfeiting, Security and Identification (2010 ASID), P150, DOI 10.1109/ICASID.2010.5551512	41	4	4			IEEE-INST ELECTRICAL ELECTRONICS ENGINEERS INC	PISCATAWAY	445 HOES LANE, PISCATAWAY, NJ 08855-4141 USA						SEP	2022	41	9					3040	3051		10.1109/TCAD.2021.3120534	http://dx.doi.org/10.1109/TCAD.2021.3120534												2024-10-24	WOS:000842062100024
J	Pang, SC; Li, WH; He, H; Shan, ZG; Wang, X				Pang, Shanchen; Li, Wenhao; He, Hua; Shan, Zhiguang; Wang, Xun			An EDA-GA Hybrid Algorithm for Multi-Objective Task Scheduling in Cloud Computing	IEEE ACCESS				Article						Cloud computing; task scheduling; task completion time; load balancing	PROBABILISTIC MODEL CHECKING; SERVICE SELECTION; PERFORMANCE; SYSTEM	As one of the hot issues in cloud computing, task scheduling is an important way to meet user needs and achieve multiple goals.With the increasing number of cloud users and growing demand for cloud computing, how to reduce the task completion time and improve the system load balancing ability have attracted increasing interest from academia and industry in recent years. To meet the two aforementioned goals, this paper develops an EDA-GA hybrid scheduling algorithm based on EDA(estimation of distribution algorithm) and GA (genetic algorithm). First, the probability model and sampling method of EDA are used to generate a certain scale of feasible solutions. Second, the crossover and mutation operations of GA are used to expand the search range of solutions. Finally, the optimal scheduling strategy for assigning tasks to virtual machines is realized. This algorithm has advantages of fast convergence speed and strong search ability. The algorithm proposed in this paper is compared with EDA and GA via the CloudSim simulation experiment platform. The experimental results show that the EDA-GA hybrid algorithm can effectively reduce the task completion time and improve the load balancing ability.	[Pang, Shanchen; Li, Wenhao; Wang, Xun] China Univ Petr, Coll Comp Sci & Technol, Qingdao 266580, Shandong, Peoples R China; [He, Hua] Shandong Univ Technol, Sch Math & Stat, Zibo 255049, Peoples R China; [Shan, Zhiguang] State Informat Ctr, Informatizat & Ind Dev Dept, Beijing 100045, Peoples R China	China University of Petroleum; Shandong University of Technology	He, H (corresponding author), Shandong Univ Technol, Sch Math & Stat, Zibo 255049, Peoples R China.	huahe@sdut.edu.cn						Abdel-Jabbar MAH, 2014, IEEE INT CONF CL NET, P438, DOI 10.1109/CloudNet.2014.6969034; [Anonymous], INF SCI; [Anonymous], 2017, MOB INF SYST; [Anonymous], FUTURE GEN COMPUT SY; [Anonymous], 2018, COMPUT SCI; [Anonymous], INF SCI; Aziza H, 2018, COMPUTING, V100, P65, DOI 10.1007/s00607-017-0566-5; Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995; Chen ZG, 2019, IEEE T CYBERNETICS, V49, P2912, DOI 10.1109/TCYB.2018.2832640; Chiaraviglio L, 2018, IEEE T SUST COMPUT, V3, P274, DOI 10.1109/TSUSC.2018.2838338; Devipriya S, 2013, 2013 INTERNATIONAL CONFERENCE ON GREEN COMPUTING, COMMUNICATION AND CONSERVATION OF ENERGY (ICGCE), P883, DOI 10.1109/ICGCE.2013.6823559; Etminani K, 2007, 2007 THIRD IEEE/IFIP INTERNATIONAL CONFERENCE IN CENTRAL ASIA ON INTERNET, P167; Gao HH, 2018, INT J SOFTW ENG KNOW, V28, P1369, DOI 10.1142/S0218194018500390; Gao HH, 2018, IEEE T COMPUT SOC SY, V5, P785, DOI 10.1109/TCSS.2018.2865217; Gao HH, 2018, FUTURE GENER COMP SY, V87, P298, DOI 10.1016/j.future.2018.04.064; Gao HH, 2017, INT J SOFTW ENG KNOW, V27, P897, DOI 10.1142/S0218194017500334; Gao HH, 2017, IEEE ACCESS, V5, P11700, DOI 10.1109/ACCESS.2017.2715322; Gupta A, 2017, 2017 INTERNATIONAL CONFERENCE ON COMPUTER AND APPLICATIONS (ICCA), P174, DOI 10.1109/COMAPP.2017.8079781; Ilavarasan E., 2007, Journal of Computer Sciences, V3, P94, DOI 10.3844/jcssp.2007.94.103; Kong XZ, 2011, J NETW COMPUT APPL, V34, P1068, DOI 10.1016/j.jnca.2010.06.001; Kun Li, 2011, 2011 Sixth ChinaGrid Annual Conference (ChinaGrid), P3, DOI 10.1109/ChinaGrid.2011.17; Larraanaga P., 2001, ESTIMATION DISTRIBUT; Li HL, 2011, NEUROCOMPUTING, V74, P1868, DOI 10.1016/j.neucom.2010.06.032; Li YQ, 2018, CHIN CONTR CONF, P4489, DOI 10.23919/ChiCC.2018.8483505; Liang Bai, 2010, Proceedings 2010 Sixth International Conference on Natural Computation (ICNC 2010), P2715, DOI 10.1109/ICNC.2010.5582599; Liu CY, 2014, INT SYMP DISTR COMPU, P68, DOI 10.1109/DCABES.2014.18; Mao YC, 2014, ADV INTELL SYST, V255, P457, DOI 10.1007/978-81-322-1759-6_53; Min-You Wu, 2000, Proceedings 9th Heterogeneous Computing Workshop (HCW 2000) (Cat. No.PR00556), P375, DOI 10.1109/HCW.2000.843759; Montgomery D. C., 1984, DESIGN ANAL EXPT; Omara FA, 2010, J PARALLEL DISTR COM, V70, P13, DOI 10.1016/j.jpdc.2009.09.009; Panda SK, 2015, J SUPERCOMPUT, V71, P1505, DOI 10.1007/s11227-014-1376-6; Patel G, 2015, PROCEDIA COMPUT SCI, V57, P545, DOI 10.1016/j.procs.2015.07.385; Singh P, 2017, KNOWL INF SYST, V52, P1, DOI 10.1007/s10115-017-1044-2; Tabak EK, 2014, IEEE T PARALL DISTR, V25, P1244, DOI 10.1109/TPDS.2013.107; Tawfeek MA, 2013, 2013 8TH INTERNATIONAL CONFERENCE ON COMPUTER ENGINEERING & SYSTEMS (ICCES), P64, DOI 10.1109/ICCES.2013.6707172; Topcuoglu H, 2002, IEEE T PARALL DISTR, V13, P260, DOI 10.1109/71.993206; Vanat Q, 2011, LECT NOTES ENG COMP, P2667; Vurukonda N, 2016, PROCEDIA COMPUT SCI, V92, P128, DOI 10.1016/j.procs.2016.07.335; Wu CG, 2018, J PARALLEL DISTR COM, V117, P63, DOI 10.1016/j.jpdc.2018.02.009; Wu CG, 2016, IEEE C EVOL COMPUTAT, P2626, DOI 10.1109/CEC.2016.7744117; Xiong NX, 2012, INT PARALL DISTRIB P, P668, DOI 10.1109/IPDPS.2012.126; Yang C, 2018, 2018 IEEE 3RD INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND BIG DATA ANALYSIS (ICCCBDA), P6, DOI [10.1109/ICSSE.2018.8520188, 10.1109/ICCCBDA.2018.8386458]; Yin YY, 2020, MOBILE NETW APPL, V25, P391, DOI 10.1007/s11036-019-01241-7; Yin YY, 2018, IEEE ACCESS, V6, P62815, DOI 10.1109/ACCESS.2018.2877137; Yin YY, 2017, SENSORS-BASEL, V17, DOI 10.3390/s17092059; Yin YY, 2017, ENTROPY-SWITZ, V19, DOI 10.3390/e19070358; Yin YY, 2016, INT J SOFTW ENG KNOW, V26, P611, DOI 10.1142/S0218194016400040; Yu J., 2006, Sino-Overseas Grapevine & Wine., V3, P4; Zhang F, 2014, FUTURE GENER COMP SY, V37, P309, DOI 10.1016/j.future.2013.09.006; Zuo LY, 2015, IEEE ACCESS, V3, P2687, DOI 10.1109/ACCESS.2015.2508940	50	50	51			IEEE-INST ELECTRICAL ELECTRONICS ENGINEERS INC	PISCATAWAY	445 HOES LANE, PISCATAWAY, NJ 08855-4141 USA							2019	7						146379	146389		10.1109/ACCESS.2019.2946216	http://dx.doi.org/10.1109/ACCESS.2019.2946216												2024-10-24	WOS:000498824600003
C	Camposano, R; Gope, D; Grivet-Talocia, S; Jandhyala, V			IEEE	Camposano, Raul; Gope, Dipanjan; Grivet-Talocia, Stefano; Jandhyala, Vikram			Moore meets Maxwell	DESIGN, AUTOMATION & TEST IN EUROPE (DATE 2012)	Design Automation and Test in Europe Conference and Exhibition			Proceedings Paper	Design, Automation and Test in Europe Conference and Exhibition (DATE)	MAR 12-16, 2012	European Design & Automat Assoc, Dresden, GERMANY		European Design & Automat Assoc	Maxwell's equations; electromagnetic field solvers; electromagnetic integrity; 2.5D solvers; 3D solvers; finite element; finite difference; method of moments; boundary element method; cloud computing; multicore parallelism; MPI; reduced order equivalent circuit; circuit extraction; passive macro modeling; circuit simulation	PASSIVITY; MACROMODELS; ENFORCEMENT	Moore's Law has driven the semiconductor revolution enabling over four decades of scaling in frequency, size, complexity, and power. However, the limits of physics are preventing further scaling of speed, forcing a paradigm shift towards multicore computing and parallelization. In effect, the system is taking over the role that the single CPU was playing: high-speed signals running through chips but also packages and boards connect ever more complex systems. High-speed signals making their way through the entire system cause new challenges in the design of computing hardware. Inductance, phase shifts and velocity of light effects, material resonances, and wave behavior become not only prevalent but need to be calculated accurately and rapidly to enable short design cycle times. In essence, to continue scaling with Moore's Law requires the incorporation of Maxwell's equations in the design process. Incorporating Maxwell's equations into the design flow is only possible through the combined power that new algorithms, parallelization and high-speed computing provide. At the same time, incorporation of Maxwell-based models into circuit and system-level simulation presents a massive accuracy, passivity, and scalability challenge. In this tutorial, we navigate through the often confusing terminology and concepts behind field solvers, show how advances in field solvers enable integration into EDA flows, present novel methods for model generation and passivity assurance in large systems, and demonstrate the power of cloud computing in enabling the next generation of scalable Maxwell solvers and the next generation of Moore's Law scaling of systems. We intend to show the truly symbiotic growing relationship between Maxwell and Moore!	[Camposano, Raul; Gope, Dipanjan] Nimbic Inc, Mountain View, CA 98007 USA; [Grivet-Talocia, Stefano] Politecn Torino, Turin, Italy; [Jandhyala, Vikram] Univ Washington, Dept Elect Engn, Seattle, WA 98195 USA	Polytechnic University of Turin; University of Washington; University of Washington Seattle	Camposano, R (corresponding author), Nimbic Inc, Mountain View, CA 98007 USA.							[Anonymous], 1998, MPI: The Complete Reference; Armbrust M., 2009, UCBEECS200928; Chinea A, 2011, IEEE T COMP PACK MAN, V1, P1761, DOI 10.1109/TCPMT.2011.2167973; Coifman R., 1993, IEEE Antennas and Propagation Magazine, V35, P7, DOI 10.1109/74.250128; Gobbato L, 2011, DES AUT TEST EUROPE, P26; Gope D, 2005, IEEE T ANTENN PROPAG, V53, P3324, DOI 10.1109/TAP.2005.856350; Grivet-Talocia S, 2008, IEEE T ADV PACKAGING, V31, P673, DOI 10.1109/TADVP.2008.926004; Gustavsen B, 1999, IEEE T POWER DELIVER, V14, P1052, DOI 10.1109/61.772353; Kapur S, 1997, 1997 IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER-AIDED DESIGN - DIGEST OF TECHNICAL PAPERS, P448, DOI 10.1109/ICCAD.1997.643574; Phillips JR, 1997, IEEE T COMPUT AID D, V16, P1059, DOI 10.1109/43.662670; Triverio P, 2007, IEEE T ADV PACKAGING, V30, P795, DOI 10.1109/TADVP.2007.901567; Wang X, 2007, ELECTRICAL PERFORMANCE OF ELECTRONIC PACKAGING, P249	12	2	2			IEEE	NEW YORK	345 E 47TH ST, NEW YORK, NY 10017 USA							2012							1275	1276															2024-10-24	WOS:000415126300263
C	Hosny, A; Reda, S			IEEE	Hosny, Abdelrahman; Reda, Sherief			Characterizing and Optimizing EDA Flows for the Cloud	PROCEEDINGS OF THE 2021 DESIGN, AUTOMATION & TEST IN EUROPE CONFERENCE & EXHIBITION (DATE 2021)				Proceedings Paper	Design, Automation and Test in Europe Conference and Exhibition (DATE)	FEB 01-05, 2021	ELECTR NETWORK					Cloud computing accelerates design space exploration in logic synthesis, and parameter tuning in physical design. However, deploying EDA jobs on the cloud requires EDA teams to deeply understand the characteristics of their jobs in cloud environments. Unfortunately, there has been little to no public information on these characteristics. Thus, in this paper, we formulate the problem of migrating EDA jobs to the cloud. First, we characterize the performance of four main EDA applications, namely: synthesis, placement, routing and static timing analysis. We show that different EDA jobs require different machine configurations. Second, using observations from our characterization, we propose a novel model based on Graph Convolutional Networks to predict the total runtime of a given application on different machine configurations. Our model achieves a prediction accuracy of 87%. Third, we develop a new formulation for optimizing cloud deployments in order to reduce deployment costs while meeting deadline constraints. We present a pseudo-polynomial optimal solution using a multi-choice knapsack mapping that reduces costs by 35.29%.	[Hosny, Abdelrahman] Brown Univ, Dept Comp Sci, Providence, RI 02912 USA; [Reda, Sherief] Brown Univ, Sch Engn, Providence, RI 02912 USA	Brown University; Brown University	Hosny, A (corresponding author), Brown Univ, Dept Comp Sci, Providence, RI 02912 USA.	abdelrahman_hosny@brown.edu; sherief_reda@brown.edu						Amaru L., 2015, P 24 INT WORKSHOP LO; [Anonymous], opencores; Balkind J, 2016, ACM SIGPLAN NOTICES, V51, P217, DOI 10.1145/2954679.2872414; DUDZINSKI K, 1987, EUR J OPER RES, V28, P3, DOI 10.1016/0377-2217(87)90165-2; Kamath V, 2013, IEEE INT CONF CLOUD, P770, DOI 10.1109/CLOUD.2013.72; KELLERER H., 2004, Knapsack Problems, P317, DOI DOI 10.1007/978-3-540-24777-7_11; Kipf TN, 2016, ARXIV; Sehgal N, 2016, IETE TECH REV, V33, P345, DOI 10.1080/02564602.2015.1099056	8	0	0			IEEE	NEW YORK	345 E 47TH ST, NEW YORK, NY 10017 USA							2021							812	815		10.23919/DATE51398.2021.9473977	http://dx.doi.org/10.23919/DATE51398.2021.9473977												2024-10-24	WOS:000805289900153
C	Kuehlmann, A; Camposano, R; Colgan, J; Chilton, J; George, S; Griffith, R; Leventis, P; Singh, D			IEEE	Kuehlmann, Andreas; Camposano, Raul; Colgan, James; Chilton, John; George, Samuel; Griffith, Rean; Leventis, Paul; Singh, Deepak			Does IC Design Have a Future in the Clouds?	PROCEEDINGS OF THE 47TH DESIGN AUTOMATION CONFERENCE	Design Automation Conference DAC			Proceedings Paper	47th Design Automation Conference (DAC)	JUN 13-18, 2010	Anaheim, CA			Cloud Computing; Software as a Service; SaaS; Hosted design solutions		Cloud computing is used to describe a collection of (remote) data centers (the hardware and the software) and applications delivered from them as a service (SaaS, Software as a Service). Its success is driven by the cost-effective on-demand availability of large, scalable amounts of computing resources. The cloud has become an established paradigm for many enterprise and consumer applications such as email, web servers, productivity applications, customer relationship management, etc. However, in IC design its success is still limited. "Generic" cloud computing, as opposed to dedicated in house data centers running owned or leased software, and the EDA industry need to address the specific needs of IC design to conquer this market. Some of the key issues include: Security: Safeguarding of large amounts design data Scaling: Broad availability of not only many but also very large servers with large amounts of memory, storage and data transfer bandwidth Algorithms: Algorithms and flows that scale well for a large number of servers with uncertain latency and increased failure rates Business models: EDA leases tools for years while the predominant business model on the cloud is SaaS and payas-you-go Technical issues: Other issues include error recovery, availability, performance unpredictability, lock in, etc. This panel will discuss the real and perceived hurdles that currently prevent a broad adoption of cloud computing in IC design, and several scenarios on how this could happen.	[Kuehlmann, Andreas] Cadence Design Syst Inc, Berkeley, CA 94704 USA; [Colgan, James] Xuropa Inc, San Francisco, CA USA; [Chilton, John] Synopsys Inc, Mountain View, CA USA; [George, Samuel] Cadence Design Syst Inc, San Jose, CA USA; [Griffith, Rean] Univ Calif Berkeley, Berkeley, CA 94720 USA; [Leventis, Paul] Altera Corp, San Jose, CA USA; [Singh, Deepak] Amazon Com Inc, Seattle, WA USA	Synopsys Inc; ASML Holding; University of California System; University of California Berkeley; Altera Corporation; Amazon.com	Kuehlmann, A (corresponding author), Cadence Design Syst Inc, Berkeley, CA 94704 USA.							[Anonymous], 2009, TECHNICAL REPORT	1	3	4			IEEE	NEW YORK	345 E 47TH ST, NEW YORK, NY 10017 USA							2010							412	414															2024-10-24	WOS:000409973500078
J	Rampérez, V; Soriano, J; Lizcano, D; Lara, JA				Ramperez, Victor; Soriano, Javier; Lizcano, David; Lara, Juan A.			FLAS: A combination of proactive and reactive auto-scaling architecture for distributed services	FUTURE GENERATION COMPUTER SYSTEMS-THE INTERNATIONAL JOURNAL OF ESCIENCE				Article						Cloud; Elasticity; Automatic scaling; Distributed systems		Cloud computing has established itself as the support for the vast majority of emerging technologies, mainly due to the characteristic of elasticity it offers. Auto-scalers are the systems that enable this elasticity by acquiring and releasing resources on demand to ensure an agreed service level. In this article we present FLAS (Forecasted Load Auto-Scaling), an auto-scaler for distributed services that combines the advantages of proactive and reactive approaches according to the situation to decide the optimal scaling actions in every moment. The main novelties introduced by FLAS are (i) a predictive model of the high-level metrics trend which allows to anticipate changes in the relevant SLA parameters (e.g. performance metrics such as response time or throughput) and (ii) a reactive contingency system based on the estimation of high-level metrics from resource use metrics, reducing the necessary instrumentation (less invasive) and allowing it to be adapted agnostically to different applications. We provide a FLAS implementation for the use case of a content-based publish-subscribe middle ware (E-SilboPS) that is the cornerstone of an event-driven architecture. To the best of our knowledge, this is the first auto-scaling system for content-based publish-subscribe distributed systems (although it is generic enough to fit any distributed service). Through an evaluation based on several test cases recreating not only the expected contexts of use, but also the worst possible scenarios (following the Boundary-Value Analysis or BVA test methodology), we have validated our approach and demonstrated the effectiveness of our solution by ensuring compliance with performance requirements over 99% of the time. (C) 2021 Elsevier B.V. All rights reserved.	[Ramperez, Victor; Soriano, Javier] Univ Politecn Madrid UPM, Madrid 28660, Spain; [Lizcano, David; Lara, Juan A.] Madrid Open Univ UDIMA, Madrid 28400, Spain	Universidad Politecnica de Madrid; Madrid Open University, UDIMA	Rampérez, V (corresponding author), Univ Politecn Madrid UPM, Madrid 28660, Spain.	v.ramperez@upm.es; javier.soriano@upm.es; david.lizcano@udima.es; juanalfonso.lara@udima.es						Ali M, 2020, THEOR COMPUT SCI, V815, P25, DOI 10.1016/j.tcs.2020.02.030; Barazzutti R, 2014, INT CON DISTR COMP S, P567, DOI 10.1109/ICDCS.2014.64; Carzaniga A, 2003, ACM SIGCOMM COMP COM, V33, P163; Carzaniga A, 2001, ACM T COMPUT SYST, V19, P332, DOI 10.1145/380749.380767; Casalicchio E, 2019, CLUSTER COMPUT, V22, P995, DOI 10.1007/s10586-018-02890-1; Chen Y, 2008, CLUSTER COMPUT, V11, P299, DOI 10.1007/s10586-008-0059-6; Coutinho EF, 2015, ANN TELECOMMUN, V70, P289, DOI 10.1007/s12243-014-0450-7; Emeakaroha Vincent C., 2010, 2010 International Conference on High Performance Computing & Simulation (HPCS 2010), P48, DOI 10.1109/HPCS.2010.5547150; Galante G, 2012, INT CONF UTIL CLOUD, P263, DOI 10.1109/UCC.2012.30; Keller C, 2003, SLA DRIVEN MANAGEMEN; Kousiouris G., 2011, 2011 IEEE Symposium on Computers and Communications (ISCC 2011), P153, DOI 10.1109/ISCC.2011.5984009; Lazowska E. D., 1984, QUANTITATIVE SYSTEM; Liu XL, 2019, MATH PROBL ENG, V2019, DOI [10.1155/2019/6039846, 10.1007/978-981-13-8703-6]; Lombardi F, 2019, FUTURE GENER COMP SY, V98, P342, DOI 10.1016/j.future.2019.03.003; Lorido-Botran T, 2014, J GRID COMPUT, V12, P559, DOI 10.1007/s10723-014-9314-7; Natis Y., 2019, TECH REP, P1; Paschke A., 2006, Service Oriented Electronic Commerce, V80, P25; Qu CH, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3148149; Rampérez V, 2018, WIREL COMMUN MOB COM, DOI 10.1155/2018/4019858; Rodero-Merino L, 2010, FUTURE GENER COMP SY, V26, P1226, DOI 10.1016/j.future.2010.02.013; Sadoghi M., 2011, SIGMOD'11, P637, DOI DOI 10.1145/1989323.1989390; Ulbrich M., 2011, KARLSRUHE REPORTS IN, V37; Vavassori S., 2014, T EMERG TELECOMMUN T, V25, P294, DOI [10.1002/ett., DOI 10.1002/ETT]; Vavassori S, 2017, SENSORS-BASEL, V17, DOI 10.3390/s17092148; Vavassori S, 2013, SENSORS-BASEL, V13, P2945, DOI 10.3390/s130302945; Wu PF, 2019, PROCEEDINGS OF THE 2019 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIACCS '19), P86, DOI 10.1145/3321705.3329822; Yang J., 2009, NETWORK MEETS DATABA; Zhai YL, 2017, EUROMICRO WORKSHOP P, P438, DOI 10.1109/PDP.2017.71; Zhenhuan Gong, 2010, 6th International Conference on Network and Service Management (CNSM 2010), P9, DOI 10.1109/CNSM.2010.5691343	29	16	16			ELSEVIER	AMSTERDAM	RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS						MAY	2021	118						56	72		10.1016/j.future.2020.12.025	http://dx.doi.org/10.1016/j.future.2020.12.025		JAN 2021										2024-10-24	WOS:000620648600005
C	Badier, H; Le Lann, JC; Coussy, P; Gogniat, G			IEEE	Badier, Hannah; Le Lann, Jean-Christophe; Coussy, Philippe; Gogniat, Guy			Transient Key-based Obfuscation for HLS in an Untrusted Cloud Environment	2019 DESIGN, AUTOMATION & TEST IN EUROPE CONFERENCE & EXHIBITION (DATE)	Design Automation and Test in Europe Conference and Exhibition			Proceedings Paper	22nd Design, Automation and Test in Europe Conference and Exhibition (DATE)	MAR 25-29, 2019	Florence, ITALY			High-Level Synthesis; Cloud; IP theft; Obfuscation		Recent advances in cloud computing have led to the advent of Business-to-Business Software as a Service (SaaS) solutions, opening new opportunities for EDA. High-Level Synthesis (HLS) in the cloud is likely to offer great opportunities to hardware design companies. However, these companies are still reluctant to make such a transition, due to the new risks of Behavioral Intellectual Property (BIP) theft that a cloud-based solution presents. In this paper, we introduce a key-based obfuscation approach to protect BlIPs during cloud-based HLS. The source-to-source transformations we propose hide functionality and make normal behavior dependent on a series of input keys. In our process, the obfuscation is transient: once an obfuscated BIP is synthesized through HLS by a service provider in the cloud, the obfuscation code can only be removed at Register Transfer Level (RTL) by the design company that owns the correct obfuscation keys. Original functionality is thus restored and design overhead is kept at a minimum. Our method significantly increases the level of security of cloud-based HLS at low performance overhead. The average area overhead after obfuscation and subsequent de-obfuscation with tests performed on ASIC and FPGA is 0.39%, and over 95% of our tests had an area overhead under 5%.	[Badier, Hannah; Le Lann, Jean-Christophe] ENSTA Bretagne, Lab STICC, Brest, France; [Coussy, Philippe; Gogniat, Guy] Univ Bretagne Sud, Lab STICC, Lorient, France	ENSTA Bretagne; Universite de Bretagne Occidentale	Badier, H (corresponding author), ENSTA Bretagne, Lab STICC, Brest, France.	hannah.badier@ensta-bretagne.org; lelannje@ensta-bretagne.fr; philippe.coussy@univ-ubs.fr; guy.gogniat@univ-ubs.fr						[Anonymous], P 1998 IEEE ACM INT; [Anonymous], EDA CLOUD; [Anonymous], ARXIV E PRINTS; [Anonymous], IEEE INT S HARDW OR; [Anonymous], S PRINC PROGR LANG; [Anonymous], 2010 23 INT C VLSI D; [Anonymous], DES AUT C JUN; [Anonymous], IEEE T CONSUMER ELEC; [Anonymous], INT S; [Anonymous], 19 INT S QUAL EL DES; [Anonymous], IEEE T VERY LARGE SC; Apon D., 2014, IACR Cryptology ePrint Archive; Collberg C., 1997, Technical Report; Garg Siddharth., 2017, Hardware Protection through Obfuscation, P243; Hara Yuko, 2009, JIP, V17, P242, DOI 10.2197/ipsjjip.17.242; Veeranna N, 2017, 2017 18TH IEEE LATIN AMERICAN TEST SYMPOSIUM (LATS 2017)	16	12	12			IEEE	NEW YORK	345 E 47TH ST, NEW YORK, NY 10017 USA							2019							1118	1123		10.23919/date.2019.8715083	http://dx.doi.org/10.23919/date.2019.8715083												2024-10-24	WOS:000470666100206
J	Wu, CG; Li, W; Wang, L; Zomaya, AY				Wu, Chu-ge; Li, Wei; Wang, Ling; Zomaya, Albert Y.			An evolutionary fuzzy scheduler for multi-objective resource allocation in fog computing	FUTURE GENERATION COMPUTER SYSTEMS-THE INTERNATIONAL JOURNAL OF ESCIENCE				Article						Edge computing; Internet of Things; Evolutionary computation; Estimation of distribution algorithm; Fuzzy scheduling; Agreement index; Robustness	TASK GRAPHS; CLOUD; FRAMEWORK; DELAY	With rapid development of the Internet of Things (IoT), a vast amount of raw data produced by IoT devices needs to be processed promptly. Compared to cloud computing, fog computing nodes are closer to data resource for decreasing the end-to-end transmission latency. Considering the limited resource of IoT devices, offloading computationally-intensive tasks to the servers with high computing capability is essential in the IoT-fog-cloud system to complete those tasks on time. In this work, we propose a fuzzy logical offloading strategy for IoT applications characterized by uncertain parameters to optimize both agreement index and robustness. A multi-objective Estimation of Distribution Algorithm (EDA) is designed to learn and optimize the fuzzy offloading strategy from a diversity of the applications. The algorithm partitions applications into independent clusters, so that each cluster can be allocated to the corresponding tier for further processing. Thus, system resources are saved by making scheduling decisions in a reduced search space. Simulation studies on benchmark problems and real-world cases are carried out to verify the efficiency of our proposed algorithm. Pareto sets produced by our algorithm outperformed classic heuristic solutions for 88.3% benchmark cases and dominated Pareto sets of two state-of-art multi-objective algorithms for 92.7% and 94.4% cases correspondingly. (C) 2020 Elsevier B.V. All rights reserved.	[Wu, Chu-ge; Wang, Ling] Tsinghua Univ, Dept Automat, Beijing 100084, Peoples R China; [Li, Wei; Zomaya, Albert Y.] Univ Sydney, Ctr Distributed & High Performance Comp, Sch Comp Sci, Sydney, NSW 2006, Australia	Tsinghua University; University of Sydney	Wang, L (corresponding author), Tsinghua Univ, Dept Automat, Beijing 100084, Peoples R China.	wangling@mail.tsinghua.edu.cn						Aazam M, 2018, FUTURE GENER COMP SY, V87, P278, DOI 10.1016/j.future.2018.04.057; Baluja Shumeet, 1994, Population-based incremental learning: A method for integrating genetic search based function optimization and competitive learning; Bidot J, 2009, J SCHEDULING, V12, P315, DOI 10.1007/s10951-008-0080-x; Canon LC, 2008, GRID COMPUTING: ACHIEVEMENTS AND PROSPECTS, P73, DOI 10.1007/978-0-387-09457-1_7; Cormen Thomas H., 1990, Introduction to Algorithms; COSNARD M, 1988, PARALLEL COMPUT, V6, P275, DOI 10.1016/0167-8191(88)90070-1; Dick RP, 1998, HARDW SOFTW CODES, P97, DOI 10.1109/HSC.1998.666245; Durillo J. J., 2012, 2012 IEEE 4th International Conference on Cloud Computing Technology and Science (CloudCom). Proceedings, P185, DOI 10.1109/CloudCom.2012.6427573; Durillo JJ, 2014, CLUSTER COMPUT, V17, P169, DOI 10.1007/s10586-013-0325-0; Garg R, 2014, J SUPERCOMPUT, V68, P709, DOI 10.1007/s11227-013-1059-8; Ghahramani MH, 2017, IEEE-CAA J AUTOMATIC, V4, P6, DOI 10.1109/JAS.2017.7510313; Gorlatova M., ARXIV181102638; Hu SH, 2020, IEEE INTERNET THINGS, V7, P1426, DOI 10.1109/JIOT.2019.2955311; Jiang ED, 2019, INT J PROD RES, V57, P1756, DOI 10.1080/00207543.2018.1504251; Jing YF, 2021, NUMER LINEAR ALGEBR, V28, DOI 10.1002/nla.2350; Palacios JJ, 2017, APPL SOFT COMPUT, V56, P604, DOI 10.1016/j.asoc.2016.07.004; Kang Q, 2019, IEEE T SYST MAN CY-S, V49, P2416, DOI 10.1109/TSMC.2018.2818175; Kwok YK, 1999, ACM COMPUT SURV, V31, P406, DOI 10.1145/344588.344618; Li PK, 2008, IEEE T FUZZY SYST, V16, P123, DOI 10.1109/TFUZZ.2007.894975; Li W, 2017, FUTURE GENER COMP SY, V70, P104, DOI 10.1016/j.future.2016.06.019; Lv ZM, 2019, IEEE-CAA J AUTOMATIC, V6, P838, DOI 10.1109/JAS.2019.1911450; Mahmud R, 2019, J PARALLEL DISTR COM, V132, P190, DOI 10.1016/j.jpdc.2018.03.004; Mattern F, 2010, LECT NOTES COMPUT SC, V6462, P242, DOI 10.1007/978-3-642-17226-7_15; Meng JY, 2020, IEEE T PARALL DISTR, V31, P1270, DOI 10.1109/TPDS.2019.2961905; Montgomery D. C., 1984, DESIGN ANAL EXPT; Nan YC, 2018, J PARALLEL DISTR COM, V112, P53, DOI 10.1016/j.jpdc.2017.09.009; Sakawa M, 2000, EUR J OPER RES, V120, P393, DOI 10.1016/S0377-2217(99)00094-6; Sowinski R., 2000, Scheduling under Fuzziness; Sundar S, 2018, IEEE INFOCOM SER, P37, DOI 10.1109/INFOCOM.2018.8486305; Tchernykh A., 2019, J COMPUTATIONAL SCI, V36, P1; Topcuoglu H, 2002, IEEE T PARALL DISTR, V13, P260, DOI 10.1109/71.993206; Verba N, 2019, FUTURE GENER COMP SY, V91, P48, DOI 10.1016/j.future.2018.08.043; Wu CL, 2020, INT J OCCUP SAF ERGO, V26, P80, DOI 10.1080/10803548.2018.1466508; Yang M, 2020, IEEE ACCESS, V8, P65085, DOI 10.1109/ACCESS.2020.2983742; Yousefpour A, 2019, J SYST ARCHITECT, V98, P289, DOI 10.1016/j.sysarc.2019.02.009; Yu J, 2007, 2007 8TH IEEE/ACM INTERNATIONAL CONFERENCE ON GRID COMPUTING, P122; Yuan HT, 2017, IEEE T CYBERNETICS, V47, P3658, DOI 10.1109/TCYB.2016.2574766; Zadeh LA, 1996, INT SYM MVL, P192, DOI 10.1109/ISMVL.1996.508358; Zhan WH, 2020, IEEE INTERNET THINGS, V7, P5449, DOI 10.1109/JIOT.2020.2978830; Zhang PY, 2018, FUTURE GENER COMP SY, V88, P16, DOI 10.1016/j.future.2018.05.008; Zhang QF, 2007, IEEE T EVOLUT COMPUT, V11, P712, DOI 10.1109/TEVC.2007.892759; Zhou XM, 2019, FUTURE GENER COMP SY, V93, P278, DOI 10.1016/j.future.2018.10.046	42	40	41			ELSEVIER	AMSTERDAM	RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS						APR	2021	117						498	509		10.1016/j.future.2020.12.019	http://dx.doi.org/10.1016/j.future.2020.12.019		JAN 2021										2024-10-24	WOS:000612107200018
